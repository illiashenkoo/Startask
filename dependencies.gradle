ext {

    /*====================================== MAIN ======================================*/

    android = [
            compileSdkVersion: 28,
            minSdkVersion    : 16,
            targetSdkVersion : 28,
            buildToolsVersion: "28.0.3",
    ]

    libsGroup = "com.github.illiashenkoo.startask"
    libsVersion = "0.1.5"

    /*================================= BUILD PLUGINS ==================================*/

    buildVersions = [
            gradle   : '3.4.1',
            kotlin   : '1.3.31',
            dcendents: '2.1',
//            dokka    : '0.9.17',
    ]

    buildPlugins = [
            gradle   : "com.android.tools.build:gradle:$buildVersions.gradle",
            kotlin   : "org.jetbrains.kotlin:kotlin-gradle-plugin:$buildVersions.kotlin",
            dcendents: "com.github.dcendents:android-maven-gradle-plugin:$buildVersions.dcendents",
//            dokka    : "org.jetbrains.dokka:dokka-android-gradle-plugin:$buildVersions.dokka",
    ]

    /*================================== DEPENDENCIES ==================================*/

    def android_support_runner_version = '1.0.2'
    def android_support_espresso_core_version = '3.0.2'
    def junit_version = '4.12'
    def mockito_version = '2.7.22'
    def robolectric_version = '4.2.1'
    def android_x_appcompat = '1.0.2'
    def android_x_runner = '1.1.2-alpha02'
    def android_x_espresso_core = '3.2.0-beta01'
    def android_x_recycler_view = '1.0.0'
    def android_x_fragment = '1.0.0'

    def libs = [
            /* kotlin */
            kotlinStdlib        : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$buildVersions.kotlin",

            androidxAppcompat   : "androidx.appcompat:appcompat:$android_x_appcompat",

            androidxAnnotation  : "androidx.annotation:annotation:$android_x_appcompat",
            androidxRecyclerView: "androidx.recyclerview:recyclerview:$android_x_recycler_view",
            androidxFragment    : "androidx.fragment:fragment:$android_x_fragment",

    ]

    def testLibs = [
            jnuit                     : "junit:junit:$junit_version",
            androidSupportRunner      : "com.android.support.test:runner:$android_support_runner_version",
            androidSupportEspressoCore: "com.android.support.test.espresso:espresso-core:$android_support_espresso_core_version",
            mockito                   : "org.mockito:mockito-core:$mockito_version",
            robolectric               : "org.robolectric:robolectric:$robolectric_version",
            androidxRunner            : "androidx.test:runner:$android_x_runner",
            androidxEspressoCore      : "androidx.test.espresso:espresso-core:$android_x_espresso_core",
    ]

    /*============================== MODULE DEPENDENCIES  ==============================*/

    def modules = [
            ktx_core   : ":startask-ktx-core",
            utils      : ":startask-utils",
            lifecycle  : ":startask-lifecycle",
            adapter    : ":startask-adapter",
            permissions: ":startask-permissions",
    ]

    libraryModuleDependencies = [
            /* android support */
            [configuration: "implementation", dependency: libs.supportDesign],

            /* kotlin */
            [configuration: "api", dependency: libs.kotlinStdlib],

            /* test */
            [configuration: "testImplementation", dependency: testLibs.jnuit],
            [configuration: "testImplementation", dependency: testLibs.mockito],
    ]

    sampleModuleDependencies = [
            [configuration: "implementation", dependency: libs.androidxAppcompat],

            /* kotlin */
            [configuration: "implementation", dependency: libs.kotlinStdlib],

            /* modules */
            [configuration: "implementation", dependency: project(modules.ktx_core)],
            [configuration: "implementation", dependency: project(modules.utils)],
            [configuration: "implementation", dependency: project(modules.lifecycle)],
            [configuration: "implementation", dependency: project(modules.adapter)],
            [configuration: "implementation", dependency: project(modules.permissions)],

            /* test */
//            [configuration: "testImplementation", dependency: testLibs.jnuit],
            [configuration: "testImplementation", dependency: testLibs.mockito],
    ]

    ktxCoreModuleDependencies = [
            [configuration: "implementation", dependency: libs.androidxAnnotation],

            /* tests */
            [configuration: "testImplementation", dependency: testLibs.jnuit],
            [configuration: "androidTestImplementation", dependency: testLibs.androidxRunner],
            [configuration: "androidTestImplementation", dependency: testLibs.androidxEspressoCore],
    ]

    utilsModuleDependencies = [
            [configuration: "implementation", dependency: libs.androidxAnnotation],

            /* tests */
            [configuration: "testImplementation", dependency: testLibs.jnuit],
            [configuration: "androidTestImplementation", dependency: testLibs.androidxRunner],
            [configuration: "androidTestImplementation", dependency: testLibs.androidxEspressoCore],
    ]

    adapterModuleDependencies = [
            /* AndroidX */
            [configuration: "implementation", dependency: libs.androidxAnnotation],
            [configuration: "implementation", dependency: libs.androidxRecyclerView],

            /* kotlin */
            [configuration: "implementation", dependency: libs.kotlinStdlib],

            /* tests */
            [configuration: "testImplementation", dependency: testLibs.jnuit],
            [configuration: "androidTestImplementation", dependency: testLibs.androidxRunner],
            [configuration: "androidTestImplementation", dependency: testLibs.androidxEspressoCore],
    ]

    lifecycleModuleDependencies = [
            [configuration: "implementation", dependency: libs.androidxAnnotation],

            /* kotlin */
            [configuration: "implementation", dependency: libs.kotlinStdlib],

            /* tests */
            [configuration: "testImplementation", dependency: testLibs.jnuit],
            [configuration: "androidTestImplementation", dependency: testLibs.androidxRunner],
            [configuration: "androidTestImplementation", dependency: testLibs.androidxEspressoCore],
    ]

    permissionsModuleDependencies = [
            [configuration: "implementation", dependency: libs.androidxAnnotation],
            [configuration: "implementation", dependency: libs.androidxAppcompat],
            [configuration: "implementation", dependency: libs.androidxFragment],

            /* kotlin */
            [configuration: "implementation", dependency: libs.kotlinStdlib],

            /* tests */
            [configuration: "testImplementation", dependency: testLibs.jnuit],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.robolectric],
    ]

    /*==================================== PLUGINS =====================================*/

    def plugins = [
            android_library          : 'com.android.library',
            android_application      : 'com.android.application',
            kotlin_android           : 'kotlin-android',
            kotlin_android_extensions: 'kotlin-android-extensions',
            kotlin_kapt              : 'kotlin-kapt',
            android_maven            : 'com.github.dcendents.android-maven',
            dokka_android            : 'org.jetbrains.dokka-android',
            jacoco                   : 'jacoco',

    ]

    sampleModulePlugins = [
            plugins.android_application,
            plugins.kotlin_android,
            plugins.kotlin_android_extensions,
            plugins.kotlin_kapt,
    ]

    ktxCoreModulePlugins = [
            plugins.android_library,
            plugins.kotlin_android,
            plugins.android_maven
    ]

    utilsModulePlugins = [
            plugins.android_library,
            plugins.kotlin_android,
            plugins.android_maven
    ]

    adapterModulePlugins = [
            plugins.android_library,
            plugins.kotlin_android,
            plugins.android_maven
    ]

    lifecycleModulePlugins = [
            plugins.android_library,
            plugins.kotlin_android,
            plugins.android_maven
    ]

    permissionsModulePlugins = [
            plugins.android_library,
            plugins.kotlin_android,
            plugins.android_maven,
    ]
}